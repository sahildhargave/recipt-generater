import 'dart:io';

import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:flutter_svg/svg.dart';
import 'package:invoice_generator/models/cart_item.dart';
import 'package:invoice_generator/models/product.dart';
import 'package:invoice_generator/res/colors.dart';
import 'package:invoice_generator/res/pdf.dart';
import 'package:invoice_generator/screens/pdf_view.dart';
import 'package:invoice_generator/shared/primary_button.dart';
import 'package:invoice_generator/widgets/change_name.dart';
import 'package:invoice_generator/widgets/logo_select.dart';
import 'package:invoice_generator/widgets/product_select.dart';
import 'package:invoice_generator/widgets/summery.dart';

class HomePage extends StatefulWidget {
  const HomePage({super.key});

  @override
  State<HomePage> createState() => _HomePageState();
}

class _HomePageState extends State<HomePage> {
  List<Product> productCatalog = [
    Product(id: 1, name: 'Milk Chocolate', price: 450),
    Product(id: 2, name: 'Coca Cola', price: 100),
    Product(id: 3, name: 'Redbull (Sugar Free)', price: 750),
    Product(id: 4, name: 'Fresh Milk', price: 450),
    Product(id: 5, name: 'Panadol', price: 450),
    Product(id: 6, name: 'Sprite', price: 450),
    Product(id: 7, name: 'Fried Chicken', price: 550),
  ];
  List<CartItem> cart = [];
  String businessName = "Receipt snap";

  File? selectedLogo;
  bool pdfGenerating = false;

  double appCharges = 45.0;
  double totalCost = 0.0;

  void generatePDF() async {
    if (cart.isEmpty) {
      return;
    }
    setState(() {
      pdfGenerating = true;
    });

    File pdfFile = await PDFGenerator.generateInvoicePDF(
      icon: selectedLogo,
      cartItems: cart,
      businessName: businessName,
      total: totalCost,
    );
    setState(() {
      pdfGenerating = false;
    });
    if (mounted) {
      Navigator.push(
        context,
        MaterialPageRoute(
          builder: (context) => PdfPreviewScreen(pdf: pdfFile),
        ),
      );
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: logoWithTitle(),
      ),
      body: Padding(
        padding: const EdgeInsets.all(20),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Expanded(
              child: ListView(
                children: [
                  LogoSelect(
                    selectedLogo: selectedLogo,
                    onSelect: (File? p0) {
                      setState(() {
                        selectedLogo = p0;
                      });
                    },
                  ),
                  ChangeName(
                    businessName: businessName,
                    onNameSelect: (String p0) {
                      setState(() {
                        businessName = p0;
                      });
                    },
                  ),
                  ProductSelect(
                    onAdded: (CartItem cartItem) {
                      setState(() {
                        cart.add(cartItem);
                        totalCost += cartItem.qty * cartItem.product.price;
                      });
                    },
                    onRemoved: (CartItem cartItem) {
                      setState(() {
                        cart.remove(cartItem);
                        totalCost =
                            totalCost - cartItem.qty * cartItem.product.price;
                      });
                    },
                    productCatalog: productCatalog,
                    cart: cart,
                  ),
                  Summery(
                    appCharges: appCharges,
                    total: totalCost,
                  ),
                ],
              ),
            ),
            SafeArea(
              child: PrimaryButton(
                onTap: () {
                  generatePDF();
                },
                label: 'Generate invoice',
                child: pdfGenerating
                    ? const CupertinoActivityIndicator(
                        color: Colors.white,
                      )
                    : null,
              ),
            ),
          ],
        ),
      ),
    );
  }

  Row logoWithTitle() {
    return Row(
      mainAxisAlignment: MainAxisAlignment.center,
      children: [
        SvgPicture.asset(
          'assets/logo.svg',
          color: AppColors.primary,
        ),
        const SizedBox(width: 5),
        Text(
          'ReceiptSnap'.toUpperCase(),
          style: TextStyle(
              color: AppColors.primary,
              letterSpacing: 2,
              fontWeight: FontWeight.w600),
        ),
      ],
    );
  }
}



import 'package:flutter/material.dart';
import 'package:invoice_generator/res/colors.dart';
import 'package:invoice_generator/shared/decorated_container.dart';

class Summery extends StatelessWidget {
  const Summery({
    Key? key,
    required this.appCharges,
    required this.total,
  }) : super(key: key);

  final double appCharges;
  final double total;

  @override
  Widget build(BuildContext context) {
    return DecoratedContainer(
      showActions: false,
      label: 'Summery',
      onTap: () {},
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Row(
            mainAxisAlignment: MainAxisAlignment.spaceBetween,
            children: [
              const Text('Total'),
              Text(
                '$total LKR',
                style: TextStyle(
                    color: AppColors.primary, fontWeight: FontWeight.w600),
              ),
            ],
          ),
          const SizedBox(height: 10),
          Row(
            mainAxisAlignment: MainAxisAlignment.spaceBetween,
            children: [
              const Text('App charges'),
              Text(
                '$appCharges LKR',
                style: TextStyle(
                    color: AppColors.primary, fontWeight: FontWeight.w600),
              ),
            ],
          ),
          const SizedBox(height: 10),
          Row(
            mainAxisAlignment: MainAxisAlignment.spaceBetween,
            children: [
              const Text('Sub total'),
              Text(
                '${appCharges + total} LKR',
                style: TextStyle(
                    color: AppColors.primary, fontWeight: FontWeight.w600),
              ),
            ],
          ),
        ],
      ),
    );
  }
}

import 'dart:io';

import 'package:flutter/material.dart';
import 'package:image_picker/image_picker.dart';
import 'package:invoice_generator/shared/decorated_container.dart';

class LogoSelect extends StatefulWidget {
  final Function(File?) onSelect;
  const LogoSelect({
    Key? key,
    required this.onSelect,
    required this.selectedLogo,
  }) : super(key: key);

  final File? selectedLogo;

  @override
  State<LogoSelect> createState() => _LogoSelectState();
}

class _LogoSelectState extends State<LogoSelect> {
  Future<void> getImage() async {
    final ImagePicker picker = ImagePicker();
    XFile? response = await picker.pickImage(source: ImageSource.gallery);

    if (response == null) {
      return;
    }
    widget.onSelect(File(response.path));
  }

  @override
  Widget build(BuildContext context) {
    return DecoratedContainer(
      label: 'Business logo',
      onTap: () {
        getImage();
      },
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Container(
            decoration: BoxDecoration(
              border: Border.all(
                color: const Color.fromARGB(255, 243, 243, 243),
              ),
            ),
            height: 80,
            width: 80,
            child: widget.selectedLogo != null
                ? Image.file(widget.selectedLogo!)
                : const Icon(
                    Icons.image_outlined,
                    color: Color.fromARGB(255, 217, 217, 217),
                  ),
          ),
        ],
      ),
    );
  }
}



import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:invoice_generator/models/cart_item.dart';
import 'package:invoice_generator/models/product.dart';
import 'package:invoice_generator/res/colors.dart';
import 'package:invoice_generator/shared/popup.dart';
import 'package:invoice_generator/shared/primary_button.dart';

class ProductPopup extends StatefulWidget {
  final List<Product> productCatalog;
  final Function(CartItem) onSelect;
  const ProductPopup({
    Key? key,
    required this.productCatalog,
    required this.onSelect,
  }) : super(key: key);

  @override
  State<ProductPopup> createState() => _ProductPopupState();
}

class _ProductPopupState extends State<ProductPopup> {
  Product? selected;
  late TextEditingController controller;

  @override
  void initState() {
    super.initState();
    controller = TextEditingController();
  }

  @override
  Widget build(BuildContext context) {
    return SizedBox(
      child: ModalPopup(
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text(
              'Select products'.toUpperCase(),
              style: TextStyle(
                  color: AppColors.primary,
                  fontSize: 16,
                  fontWeight: FontWeight.w600),
            ),
            const Divider(),
            Row(
              children: [
                DropdownButton(
                    onChanged: (value) {
                      setState(() {
                        selected = value;
                      });
                    },
                    value: selected,
                    items: widget.productCatalog
                        .map(
                          (e) => DropdownMenuItem(
                            value: e,
                            child: Text(e.name),
                          ),
                        )
                        .toList()),
                const SizedBox(width: 30),
                Flexible(
                  child: TextField(
                    controller: controller,
                    inputFormatters: [FilteringTextInputFormatter.digitsOnly],
                    decoration: const InputDecoration(
                      hintText: 'QTY',
                      border: InputBorder.none,
                    ),
                  ),
                )
              ],
            ),
            const Divider(),
            const SizedBox(height: 20),
            PrimaryButton(
              onTap: () {
                if (selected == null) {
                  Navigator.pop(context);
                  return;
                }
                widget.onSelect(
                  CartItem(
                    product: selected!,
                    qty: controller.text.isEmpty
                        ? 1
                        : int.parse(controller.text),
                  ),
                );
                Navigator.pop(context);
              },
              label: 'Add item',
            )
          ],
        ),
      ),
    );
  }
}

import 'package:flutter/material.dart';
import 'package:invoice_generator/models/cart_item.dart';
import 'package:invoice_generator/models/product.dart';
import 'package:invoice_generator/res/colors.dart';
import 'package:invoice_generator/shared/decorated_container.dart';
import 'package:invoice_generator/widgets/product_select_popup.dart';

class ProductSelect extends StatelessWidget {
  final Function(CartItem) onAdded;
  final Function(CartItem) onRemoved;

  final List<Product> productCatalog;
  final List<CartItem> cart;

  const ProductSelect({
    Key? key,
    required this.onAdded,
    required this.onRemoved,
    required this.productCatalog,
    required this.cart,
  }) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return DecoratedContainer(
      label: 'Products',
      onTap: () {
        showDialog(
          context: context,
          builder: (context) {
            return ProductPopup(
              onSelect: (p0) {
                onAdded(p0);
              },
              productCatalog: productCatalog,
            );
          },
        );
      },
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: cart.map((e) => productRow(e)).toList(),
      ),
    );
  }

  Widget productRow(CartItem e) {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 10),
      child: Dismissible(
        onDismissed: (direction) {
          onRemoved(e);
        },
        key: UniqueKey(),
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceBetween,
          children: [
            Text(
              "${e.product.name} x ${e.qty}",
              style: TextStyle(
                  color: AppColors.primary, 
				  fontWeight: FontWeight.w600),
            ),
            Text(
              "${e.product.price * e.qty} LKR",
              style: const TextStyle(fontWeight: FontWeight.w600),
            ),
          ],
        ),
      ),
    );
  }
}

import 'dart:io';
import 'package:document_file_save_plus/document_file_save_plus.dart';
import 'package:flutter/material.dart';
import 'package:flutter_pdfview/flutter_pdfview.dart';

class PdfPreviewScreen extends StatefulWidget {
  final File pdf;
  const PdfPreviewScreen({
    Key? key,
    required this.pdf,
  }) : super(key: key);

  @override
  State<PdfPreviewScreen> createState() => _PdfPreviewState();
}

class _PdfPreviewState extends State<PdfPreviewScreen> {
  void exportPDF() async {
    ScaffoldMessengerState scaffoldMessengerState =
        ScaffoldMessenger.of(context);
    try {
      scaffoldMessengerState
          .showSnackBar(const SnackBar(content: Text('Generating..')));
      DocumentFileSavePlus savePlus = DocumentFileSavePlus();
      await savePlus.saveFile(
          widget.pdf.readAsBytesSync(), "invoice.pdf", "application/pdf");
    } catch (e) {
      scaffoldMessengerState
          .showSnackBar(const SnackBar(content: Text('Something went wrong')));
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(title: const Text('Preview'), actions: [
        GestureDetector(
          onTap: () => exportPDF(),
          child: const Icon(
            Icons.download,
          ),
        ),
        const SizedBox(
          width: 20,
        )
      ]),
      body: PDFView(
        filePath: widget.pdf.path,
        enableSwipe: true,
        swipeHorizontal: true,
        autoSpacing: false,
        pageFling: false,
        onRender: (pages) {},
        onError: (error) {},
        onPageError: (page, error) {},
        onViewCreated: (PDFViewController pdfViewController) {},
      ),
    );
  }
}